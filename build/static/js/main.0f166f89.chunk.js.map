{"version":3,"sources":["components/Layout/index.js","components/DrawerContent/DescriptionItem/index.js","utils/rgb.js","components/DrawerContent/index.js","components/Feed/index.js","app/index.js","utils/reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Footer","LayoutWrap","children","style","position","zIndex","width","className","padding","marginTop","minHeight","textAlign","dayjs","format","DescriptionItem","title","content","rgb","GetColors","cols","r","g","b","count","Math","floor","random","toString","DrawerContent","props","useState","postComments","setPostComments","commentsLoaded","setCommentsLoaded","Panel","Collapse","useEffect","a","URL","permalink","fetch","then","res","json","data","catch","error","req","console","handleSearch","length","info","span","src","url","gutters","ArrowUpOutlined","color","end","ups","duration","all_awardings","sort","map","award","index","margin","size","icon_url","alt","name","ghost","header","comment","extend","relativeTime","author","avatar","backgroundColor","icon","RedditOutlined","body","actions","active","paragraph","rows","target","rel","href","created_utc","Feed","posts","setPosts","postData","setPostData","loading","setLoading","isOpen","setIsOpen","display","justifyContent","placement","onClose","visible","headerStyle","gutter","post","thumbnail","includes","xl","lg","md","sm","xs","hoverable","bordered","cover","preview","onClick","Meta","description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEQA,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OA2BVC,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,eAAC,IAAD,WACE,cAACL,EAAD,CAAQM,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,QAAtD,SACE,qBAAKC,UAAU,WAEjB,cAACR,EAAD,CACEQ,UAAU,cACVJ,MAAO,CAAEK,QAAS,SAAUC,UAAW,IAFzC,SAIE,qBACEF,UAAU,yBACVJ,MAAO,CAAEK,QAAS,GAAIE,UAAW,KAFnC,SAIGR,MAGL,eAACF,EAAD,CAAQG,MAAO,CAAEQ,UAAW,UAA5B,6BACgBC,MAAQC,OAAO,QAD/B,sC,0CCrBSC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OAC7B,sBAAKT,UAAU,wCAAf,UACE,oBAAGA,UAAU,wCAAb,UAAsDQ,EAAtD,OACCC,MCJU,SAASC,IACtB,SAASC,IAGP,IAFA,IAAMC,EAAO,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC1BC,EAAQ,EACLJ,EAAKC,EAAID,EAAKE,EAAIF,EAAKG,EAAI,KAAOC,EAAQ,GAC/CJ,EAAKC,EAAII,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBP,EAAKE,EAAIG,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBP,EAAKG,EAAIE,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBH,IAEF,OAAOJ,EAGT,MACE,OACAD,IAAYE,EAAEO,WACd,IACAT,IAAYG,EAAEM,WACd,IACAT,IAAYI,EAAEK,WACd,I,gJCKW,SAASC,EAAcC,GAAQ,IAAD,gBAC3C,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEQC,EAAUC,IAAVD,MA2BR,OAzBAE,qBAAU,WAAM,4CAEd,8BAAAC,EAAA,sEAEUC,EAFV,sCAEwCV,QAFxC,IAEwCA,OAFxC,EAEwCA,EAAOW,UAF/C,yBAGsBC,MAAMF,GACrBG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUZ,EAAgBY,EAAK,GAAGC,KAAK3C,aAC5CwC,MAAK,kBAAMR,GAAkB,MAC7BY,OAAM,SAACC,GACN,MAAMA,KARd,cAGUC,EAHV,yBAUWA,GAVX,gCAYIC,QAAQF,MAAR,MAZJ,0DAFc,sBAiBVlB,GAjBU,mCAkBZqB,GAEEnB,EAAaoB,OAAS,GACxBF,QAAQG,KAAK,oBAAqB,oBAEnC,CAACrB,EAAaoB,OAAQtB,IAGvB,qCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKwB,KAAM,GAAX,SACE,cAAC,IAAD,CAAOC,IAAKzB,EAAM0B,IAAKhD,UAAU,6BAGrC,eAAC,IAAD,CAAKiD,QAAS,CAAC,GAAI,IAAnB,UACE,eAAC,IAAD,CAAKH,KAAM,GAAX,UACE,cAAC,IAAD,IACA,mBAAG9C,UAAU,kCAAb,mBACA,eAAC,IAAD,CAAKiD,QAAS,CAAC,GAAI,IAAnB,UACE,cAAC,IAAD,CAAKH,KAAM,GAAX,SACE,cAAC,EAAD,CACEtC,MAAM,WACNC,QACE,qCACE,cAACyC,EAAA,EAAD,CAAiBtD,MAAO,CAAEuD,MAAO,aAAgB,IACjD,cAAC,IAAD,CAASC,IAAK9B,EAAM+B,IAAKC,SAAU,aAM3C,cAAC,IAAD,CAAKR,KAAM,GAAX,SACE,cAAC,EAAD,CACEtC,MAAM,SACNC,QACE,cAAC,IAAD,CAAKwC,QAAS,CAAC,GAAI,IAAnB,6BACG3B,EAAMiC,qBADT,iBACG,EACGC,YAFN,kBACG,YACU,SAACzB,EAAGhB,GAAJ,OAAWgB,EAAEf,MAAQD,EAAEC,OAAS,EAAI,MAC5CyC,WAHL,aACG,UAEQ,SAACC,EAAOC,GAAR,OACL,cAAC,IAAD,CAAiB/D,MAAO,CAAEgE,OAAQ,SAAlC,SACE,cAAC,IAAD,CACE5C,MACE,cAAC,IAAD,CACEoC,IAAKM,EAAM1C,MACXsC,SAAUI,EAAM1C,MAAQ,GAAK,IAAM,IAGvC6C,KAAK,QAPP,SASE,qBACEd,IAAKW,EAAMI,SACXC,IAAKL,EAAMM,KACXpE,MAAO,CAAEG,MAAO,eAbZ4D,aAJhB,QAqBU,aAKfjC,EACC,cAAC,IAAD,CAAKoB,KAAM,GAAX,SACE,cAAC,IAAD,CAAUmB,OAAO,EAAjB,SACE,cAACrC,EAAD,CAAOsC,OAAM,oBAAe1C,EAAaoB,OAA5B,KAAb,mBACGpB,EACEgC,YAFL,kBACG,SAAAhC,GACS,SAACO,EAAGhB,GAAJ,OAAWgB,EAAEO,KAAKe,IAAMtC,EAAEuB,KAAKe,KAAO,EAAI,MACjDI,WAHL,aACG,UAEQ,SAACU,EAASR,GACf,IAAQrB,EAAS6B,EAAT7B,KAGR,OAFAjC,IAAM+D,OAAOC,KAGX/B,EAAKgC,QACH,cAAC,IAAD,CAEEA,OAAQhC,EAAKgC,OACbC,OACE,cAAC,IAAD,CACE3E,MAAO,CAAE4E,gBAAiB9D,KAC1B+D,KAAM,cAACC,EAAA,EAAD,IACNX,IAAKzB,EAAKgC,SAGd7D,QAAS,4BAAI6B,EAAKqC,OAClBC,QAAS,CACP,cAAC,IAAD,UACE,iCACE,cAAC1B,EAAA,EAAD,CACEtD,MAAO,CACLuD,MAAO,aAER,IACFb,EAAKe,QAPIM,KAXXA,OAVuC,SAwC5D,cAAC,IAAD,CAAUkB,QAAM,EAACC,UAAW,CAAEC,KAAM,WAI1C,eAAC,IAAD,CAAKjC,KAAM,GAAX,UACE,cAAC,IAAD,IACA,mBAAG9C,UAAU,kCAAb,kBACA,eAAC,IAAD,CAAKiD,QAAS,CAAC,GAAI,IAAnB,UACE,cAAC,IAAD,CAAKH,KAAM,GAAX,SACE,cAAC,EAAD,CACEtC,MAAM,SACNC,QACE,mBACEuE,OAAO,SACPC,IAAI,aACJC,KAAI,sCAAiC5D,EAAMgD,QAH7C,SAKGhD,EAAMgD,aAKf,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACE,cAAC,EAAD,CACEtC,MAAM,eACNC,QAASJ,IAA0B,IAApBiB,EAAM6D,aAAoB7E,OAAO,+B,+BC3KjD,SAAS8E,IAAQ,IAAD,IAC7B,EAA0B7D,mBAAS,IAAnC,mBAAO8D,EAAP,KAAcC,EAAd,KACA,EAAgC/D,mBAAS,MAAzC,mBAAOgE,EAAP,KAAiBC,EAAjB,KACA,EAA8BjE,oBAAS,GAAvC,mBAAOkE,EAAP,KAAgBC,EAAhB,KACA,EAA4BnE,oBAAS,GAArC,mBAAOoE,EAAP,KAAeC,EAAf,KAEA9D,qBAAU,WAAM,4CAEd,4BAAAC,EAAA,6DACE2D,GAAW,GADb,SAGgB,4CAHhB,SAIsBxD,MADN,6CAETC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUiD,EAASjD,MACxBF,MAAK,kBAAMuD,GAAW,MACtBnD,OAAM,SAACC,GACN,MAAMA,KATd,cAIUC,EAJV,yBAWWA,GAXX,gCAaIC,QAAQF,MAAR,MAbJ,0DAFc,0DAkBdG,KACC,IAMH,OAAO8C,EACL,qBAAK7F,MAAO,CAAEiG,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,IAAD,CAAKlG,MAAO,CAAEgE,OAAQ,YAAtB,SACE,cAAC,IAAD,UACE,8BACE,cAAC,IAAD,CAAMC,KAAK,kBAMnB,qCACE,cAAC,IAAD,CACErD,MAAK,iBAAE+E,QAAF,IAAEA,OAAF,EAAEA,EAAU/E,aAAZ,QAAqB,GAC1BuF,UAAU,QACVC,QAlBU,kBAAMJ,GAAU,IAmB1BK,QAASN,EACT5F,MAAO,IACPmG,YAAa,CAAE9F,UAAW,SAAUH,QAAS,QAN/C,SAQE,cAACoB,EAAD,eAAmBkE,MAErB,cAAC,IAAD,CAAKY,OAAQ,CAAC,GAAI,IAAlB,mBACGd,EAAM/C,YADT,aACG,EAAY3C,SAAS8D,KACpB,SAAC2C,EAAMzC,GAAP,qBACE,UAAAyC,EAAK9D,YAAL,eAAW+D,UAAUC,SAAS,WAC5B,cAAC,IAAD,CAAiBC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAnD,SACE,cAAC,IAAD,CACEC,WAAS,EACTC,UAAU,EACVC,MACE,cAAC,IAAD,CACE/C,IAAG,UAAEqC,EAAK9D,YAAP,aAAE,EAAW9B,MAChBuC,IAAG,UAAEqD,EAAK9D,YAAP,aAAE,EAAWU,IAChB+D,SAAS,EACT/G,UAAU,sBAGdgH,QAAS,WACPpB,GAAU,GACVJ,EAAYY,EAAK9D,OAEnBtC,UAAU,cAfZ,SAiBE,cAAC,IAAKiH,KAAN,CACEzG,MAAK,UAAE4F,EAAK9D,YAAP,aAAE,EAAW9B,MAClB0G,YAAW,UAAEd,EAAK9D,YAAP,aAAE,EAAWgC,YApBpBX,WC9DxB,IAMewD,EANH,kBACV,cAAC5H,EAAD,UACE,cAAC6F,EAAD,OCOWgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.0f166f89.chunk.js","sourcesContent":["import { Layout } from \"antd\";\nimport dayjs from \"dayjs\";\nconst { Header, Content, Footer } = Layout;\n\n// Component: LayoutWrap returns a global layout component with a header, content, and footer.\n// Child components are passed as props in 'content'.\n// Sets the current date in the footer.\nconst LayoutWrap = ({ children }) => (\n  <Layout>\n    <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\n      <div className='logo' />\n    </Header>\n    <Content\n      className='site-layout'\n      style={{ padding: \"0 50px\", marginTop: 64 }}\n    >\n      <div\n        className='site-layout-background'\n        style={{ padding: 24, minHeight: 980 }}\n      >\n        {children}\n      </div>\n    </Content>\n    <Footer style={{ textAlign: \"center\" }}>\n      Reddit-Pics Â©{dayjs().format(\"YYYY\")} Created by Richard Germaine\n    </Footer>\n  </Layout>\n);\n\nexport default LayoutWrap;\n","// Component: DrawerContent.DescriptionItem - Child component of DrawerContent.\n// Used for styling detail items in the drawer.\nexport const DescriptionItem = ({ title, content }) => (\n  <div className='site-description-item-profile-wrapper'>\n    <p className='site-description-item-profile-p-label'>{title}:</p>\n    {content}\n  </div>\n);\n","// returns a string in the form of 'rgb(r,g,b)'\nexport default function rgb() {\n  function GetColors() {\n    const cols = { r: 0, g: 0, b: 0 };\n    let count = 0;\n    while (cols.r + cols.g + cols.b < 300 && count < 4) {\n      cols.r = Math.floor(Math.random() * 255);\n      cols.g = Math.floor(Math.random() * 255);\n      cols.b = Math.floor(Math.random() * 255);\n      count++;\n    }\n    return cols;\n  }\n\n  return (\n    \"rgb(\" +\n    GetColors().r.toString() +\n    \",\" +\n    GetColors().g.toString() +\n    \",\" +\n    GetColors().b.toString() +\n    \")\"\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport { DescriptionItem } from \"./DescriptionItem\";\nimport rgb from \"../../utils/rgb\";\n\nimport CountUp from \"react-countup\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\n\nimport {\n  Avatar,\n  Badge,\n  Col,\n  Collapse,\n  Comment,\n  Divider,\n  Image,\n  Row,\n  Skeleton,\n  Tooltip,\n} from \"antd\";\n\nimport { ArrowUpOutlined, RedditOutlined } from \"@ant-design/icons\";\n\n// Component: DrawerContent - Loads details of a post selected in parent component: 'Feed'.\n// An additional fetch request is made to get the comments of the post.\nexport default function DrawerContent(props) {\n  const [postComments, setPostComments] = useState([]);\n  const [commentsLoaded, setCommentsLoaded] = useState(false);\n\n  const { Panel } = Collapse;\n\n  useEffect(() => {\n    // Fetch comments of the post.\n    async function handleSearch() {\n      try {\n        const URL = `http://www.reddit.com${props?.permalink}.json?jsonp=`;\n        const req = await fetch(URL)\n          .then((res) => res.json())\n          .then((json) => setPostComments(json[1].data.children))\n          .then(() => setCommentsLoaded(true))\n          .catch((error) => {\n            throw error;\n          });\n        return req;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    if (props) {\n      handleSearch();\n    }\n    if (postComments.length > 0) {\n      console.info(\"%cComments loaded\", \"color: #42e089\");\n    }\n  }, [postComments.length, props]);\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Image src={props.url} className='drawer-content-image' />\n        </Col>\n      </Row>\n      <Row gutters={[16, 16]}>\n        <Col span={24}>\n          <Divider />\n          <p className='site-description-item-profile-p'>Stats</p>\n          <Row gutters={[16, 16]}>\n            <Col span={12}>\n              <DescriptionItem\n                title='Up votes'\n                content={\n                  <>\n                    <ArrowUpOutlined style={{ color: \"#f38546\" }} />{\" \"}\n                    <CountUp end={props.ups} duration={1.5} />\n                  </>\n                }\n              />\n            </Col>\n\n            <Col span={12}>\n              <DescriptionItem\n                title='Awards'\n                content={\n                  <Row gutters={[16, 16]}>\n                    {props.all_awardings\n                      ?.sort?.((a, b) => (a.count > b.count ? -1 : 1))\n                      .map?.((award, index) => (\n                        <Col key={index} style={{ margin: \".5rem\" }}>\n                          <Badge\n                            count={\n                              <CountUp\n                                end={award.count}\n                                duration={award.count > 10 ? 1.5 : 1}\n                              />\n                            }\n                            size='small'\n                          >\n                            <img\n                              src={award.icon_url}\n                              alt={award.name}\n                              style={{ width: \"1.8rem\" }}\n                            />\n                          </Badge>\n                        </Col>\n                      )) ?? \"none\"}\n                  </Row>\n                }\n              />\n            </Col>\n            {commentsLoaded ? (\n              <Col span={24}>\n                <Collapse ghost={true}>\n                  <Panel header={`Comments (${postComments.length})`} key='1'>\n                    {postComments\n                      .sort?.((a, b) => (a.data.ups > b.data.ups ? -1 : 1))\n                      .map?.((comment, index) => {\n                        const { data } = comment;\n                        dayjs.extend(relativeTime);\n\n                        return (\n                          data.author && (\n                            <Comment\n                              key={index}\n                              author={data.author}\n                              avatar={\n                                <Avatar\n                                  style={{ backgroundColor: rgb() }}\n                                  icon={<RedditOutlined />}\n                                  alt={data.author}\n                                />\n                              }\n                              content={<p>{data.body}</p>}\n                              actions={[\n                                <Tooltip key={index}>\n                                  <span>\n                                    <ArrowUpOutlined\n                                      style={{\n                                        color: \"#f38546\",\n                                      }}\n                                    />{\" \"}\n                                    {data.ups}\n                                  </span>\n                                </Tooltip>,\n                              ]}\n                            />\n                          )\n                        );\n                      })}\n                  </Panel>\n                </Collapse>\n              </Col>\n            ) : (\n              <Skeleton active paragraph={{ rows: 1 }} />\n            )}\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Divider />\n          <p className='site-description-item-profile-p'>User</p>\n          <Row gutters={[16, 16]}>\n            <Col span={12}>\n              <DescriptionItem\n                title='Author'\n                content={\n                  <a\n                    target='_blank'\n                    rel='noreferrer'\n                    href={`https://www.reddit.com/user/${props.author}`}\n                  >\n                    {props.author}\n                  </a>\n                }\n              />\n            </Col>\n            <Col span={12}>\n              <DescriptionItem\n                title='Published on'\n                content={dayjs(props.created_utc * 1000).format(\"MMM D, YYYY\")}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport DrawerContent from \"../DrawerContent\";\n\nimport { Card, Col, Drawer, Image, Row, Spin } from \"antd\";\n\n// Component: Feed - Loads data from reddit API and displays thumbnails of posts from r/pics.\n// Selecting a thumbnail will open a drawer with the full image and details.\nexport default function Feed() {\n  const [posts, setPosts] = useState([]);\n  const [postData, setPostData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    // Loads data from reddit API in r/pics.\n    async function handleSearch() {\n      setLoading(true);\n      try {\n        const URL = \"http://www.reddit.com/r/pics/.json?jsonp=\";\n        const req = await fetch(URL)\n          .then((res) => res.json())\n          .then((json) => setPosts(json))\n          .then(() => setLoading(false))\n          .catch((error) => {\n            throw error;\n          });\n        return req;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    handleSearch();\n  }, []);\n\n  // sets drawer state to closed when exited\n  const onClose = () => setIsOpen(false);\n\n  // Render Spinner while loading data\n  return loading ? (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Row style={{ margin: \"15% auto\" }}>\n        <Col>\n          <div>\n            <Spin size='large' />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  ) : (\n    <>\n      <Drawer\n        title={postData?.title ?? \"\"}\n        placement='right'\n        onClose={onClose}\n        visible={isOpen}\n        width={600}\n        headerStyle={{ textAlign: \"center\", padding: \"2rem\" }}\n      >\n        <DrawerContent {...postData} />\n      </Drawer>\n      <Row gutter={[16, 16]}>\n        {posts.data?.children.map(\n          (post, index) =>\n            post.data?.thumbnail.includes(\"https\") && (\n              <Col key={index} xl={6} lg={12} md={12} sm={1} xs={1}>\n                <Card\n                  hoverable\n                  bordered={false}\n                  cover={\n                    <Image\n                      alt={post.data?.title}\n                      src={post.data?.url}\n                      preview={false}\n                      className='search-card-image'\n                    />\n                  }\n                  onClick={() => {\n                    setIsOpen(true);\n                    setPostData(post.data);\n                  }}\n                  className='search-card'\n                >\n                  <Card.Meta\n                    title={post.data?.title}\n                    description={post.data?.author}\n                  />\n                </Card>\n              </Col>\n            )\n        )}\n      </Row>\n    </>\n  );\n}\n","import LayoutWrap from \"../components/Layout\";\nimport Feed from \"../components/Feed\";\n\nconst App = () => (\n  <LayoutWrap>\n    <Feed />\n  </LayoutWrap>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./utils/reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}